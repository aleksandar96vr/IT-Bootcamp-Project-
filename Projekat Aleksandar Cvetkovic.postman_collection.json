{
	"info": {
		"_postman_id": "ec9910b2-5f1a-4b9c-8912-bac4ad270150",
		"name": "Projekat Aleksandar Cvetkovic",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26681526"
	},
	"item": [
		{
			"name": "Account",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.collectionVariables.set(\"UserId\",response.userID);\r",
									"\r",
									"pm.collectionVariables.set(\"username\",response.username);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get('username'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{$randomFirstName}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}Account/v1/User",
							"host": [
								"{{baseUrl}}Account"
							],
							"path": [
								"v1",
								"User"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.collectionVariables.set(\"Token\",response.token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string 'OK'\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status - Success Test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"Success\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}Account/v1/GenerateToken",
							"host": [
								"{{baseUrl}}Account"
							],
							"path": [
								"v1",
								"GenerateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authorize User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "authorization",
								"value": "Basic QWxla3NhbmRhcjoxMjM0NQ=="
							},
							{
								"key": "Authorization",
								"value": "apiKey"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{username}}\",\r\n  \"password\": \"{{password}}\"\r\n}"
						},
						"url": {
							"raw": "https://demoqa.com/Account/v1/Authorized",
							"protocol": "https",
							"host": [
								"demoqa",
								"com"
							],
							"path": [
								"Account",
								"v1",
								"Authorized"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BookStore",
			"item": [
				{
					"name": "Get Books",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = pm.response.json();\r",
									"var isbn = response.books[0].isbn;\r",
									"pm.collectionVariables.set(\"myIsbn\", isbn);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}BookStore/v1/Books",
							"host": [
								"{{baseUrl}}BookStore"
							],
							"path": [
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"isbn\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify displayed isbn has the same value as variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.isbn).to.eql(pm.collectionVariables.get(\"myIsbn\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}BookStore/v1/Book?ISBN={{myIsbn}}",
							"host": [
								"{{baseUrl}}BookStore"
							],
							"path": [
								"v1",
								"Book"
							],
							"query": [
								{
									"key": "ISBN",
									"value": "{{myIsbn}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Order Book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify displayed isbn has the same value as variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var myIsbn = pm.variables.get(\"myIsbn\");\r",
									"    var isbn = jsonData.books[0].isbn;\r",
									"    pm.expect(isbn).to.eql(myIsbn);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{UserId}}\",\r\n  \"collectionOfIsbns\": [\r\n    {\r\n      \"isbn\": \"{{myIsbn}}\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}BookStore/v1/Books",
							"host": [
								"{{baseUrl}}BookStore"
							],
							"path": [
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book from orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isbn\": \"{{myIsbn}}\",\r\n  \"userId\": \"{{UserId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}BookStore/v1/Book",
							"host": [
								"{{baseUrl}}BookStore"
							],
							"path": [
								"v1",
								"Book"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://demoqa.com/"
		},
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "UserId",
			"value": "",
			"type": "string"
		},
		{
			"key": "username",
			"value": "",
			"type": "string"
		},
		{
			"key": "password",
			"value": "Password1*",
			"type": "string"
		},
		{
			"key": "myIsbn",
			"value": ""
		}
	]
}